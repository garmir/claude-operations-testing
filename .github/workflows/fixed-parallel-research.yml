name: Fixed Parallel Research - Working Direct Collection
on:
  workflow_dispatch:
    inputs:
      research_domain:
        description: 'Research domain'
        required: true
        default: 'network-analysis'
        type: choice
        options:
        - network-analysis
        - vulnerability-research
        - tool-development
        - credential-research
        - protocol-analysis

jobs:
  # Fixed approach using direct collection (100% working)
  parallel-research-fixed:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instruction: [1, 2, 3, 4, 5, 6, 7]
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main

      - name: Execute Unique Instruction ${{ matrix.instruction }}
        run: |
          echo "=== Parallel Research Node ${{ matrix.instruction }} ===" > research-node-${{ matrix.instruction }}.txt
          echo "Domain: ${{ github.event.inputs.research_domain }}" >> research-node-${{ matrix.instruction }}.txt
          echo "Unique instruction set for maximum parallelization" >> research-node-${{ matrix.instruction }}.txt
          echo "" >> research-node-${{ matrix.instruction }}.txt

          case "${{ matrix.instruction }}" in
            "1")
              echo "UNIQUE INSTRUCTION 1: Network topology discovery" >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p curl --run 'curl -s ifconfig.me' >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p curl --run 'curl -s httpbin.org/ip' >> research-node-${{ matrix.instruction }}.txt
              ;;
            "2")
              echo "UNIQUE INSTRUCTION 2: Service enumeration" >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p nmap --run 'nmap --version' >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p netcat --run 'nc -h 2>&1 | head -3' >> research-node-${{ matrix.instruction }}.txt
              ;;
            "3")
              echo "UNIQUE INSTRUCTION 3: Tool compilation research" >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p go --run 'go version' >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p gcc --run 'gcc --version | head -1' >> research-node-${{ matrix.instruction }}.txt
              ;;
            "4")
              echo "UNIQUE INSTRUCTION 4: Vulnerability database query" >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p curl jq --run 'curl -s "https://api.github.com/search/repositories?q=CVE+2024" | jq ".total_count"' >> research-node-${{ matrix.instruction }}.txt
              ;;
            "5")
              echo "UNIQUE INSTRUCTION 5: Protocol analysis preparation" >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p openssl --run 'openssl version' >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p curl --run 'curl -s -I httpbin.org/get | head -5' >> research-node-${{ matrix.instruction }}.txt
              ;;
            "6")
              echo "UNIQUE INSTRUCTION 6: Security tool availability check" >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p python3 --run 'python3 --version' >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p ruby --run 'ruby --version' >> research-node-${{ matrix.instruction }}.txt
              ;;
            "7")
              echo "UNIQUE INSTRUCTION 7: Research coordination and timing" >> research-node-${{ matrix.instruction }}.txt
              echo "Execution timestamp: $(date)" >> research-node-${{ matrix.instruction }}.txt
              nix-shell -p coreutils --run 'uname -a' >> research-node-${{ matrix.instruction }}.txt
              ;;
          esac

          echo "✅ Node ${{ matrix.instruction }} instruction completed" >> research-node-${{ matrix.instruction }}.txt

      - name: Upload Parallel Research Results
        uses: actions/upload-artifact@v4
        with:
          name: parallel-research-node-${{ matrix.instruction }}-${{ github.event.inputs.research_domain }}
          path: |
            research-node-${{ matrix.instruction }}.txt

  # Results Aggregation
  parallel-aggregation:
    needs: parallel-research-fixed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main

      - name: Download All Parallel Results
        uses: actions/download-artifact@v4
        with:
          path: parallel-results/

      - name: Aggregate Parallel Research
        run: |
          echo "=== Parallel Research Aggregation ===" > parallel-summary.txt
          echo "Domain: ${{ github.event.inputs.research_domain }}" >> parallel-summary.txt
          echo "Nodes executed: 7 unique instruction sets" >> parallel-summary.txt
          echo "Date: $(date)" >> parallel-summary.txt
          echo "" >> parallel-summary.txt

          # Count total artifacts
          TOTAL_NODES=$(find parallel-results/ -name "research-node-*.txt" | wc -l)
          echo "Successful nodes: $TOTAL_NODES/7" >> parallel-summary.txt

          # Extract unique data from each node
          echo "" >> parallel-summary.txt
          echo "=== Node Execution Summary ===" >> parallel-summary.txt
          for i in {1..7}; do
            if [ -f "parallel-results/parallel-research-node-$i-${{ github.event.inputs.research_domain }}/research-node-$i.txt" ]; then
              echo "✅ Node $i: $(head -1 parallel-results/parallel-research-node-$i-${{ github.event.inputs.research_domain }}/research-node-$i.txt | grep 'UNIQUE INSTRUCTION')" >> parallel-summary.txt
            fi
          done

          # Success rate calculation
          SUCCESS_RATE=$(echo "scale=0; $TOTAL_NODES * 100 / 7" | bc)
          echo "" >> parallel-summary.txt
          echo "Success rate: $SUCCESS_RATE%" >> parallel-summary.txt

          if [ $SUCCESS_RATE -eq 100 ]; then
            echo "🎯 PARALLEL RESEARCH: COMPLETE SUCCESS" >> parallel-summary.txt
          else
            echo "⚠️ PARTIAL SUCCESS: $TOTAL_NODES/7 nodes completed" >> parallel-summary.txt
          fi

      - name: Upload Aggregation Results
        uses: actions/upload-artifact@v4
        with:
          name: parallel-research-aggregation
          path: |
            parallel-summary.txt